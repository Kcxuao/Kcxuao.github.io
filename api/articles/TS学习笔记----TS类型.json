{"title":"TS学习笔记----TS类型","uid":"5a2a5d9069f5f41c9d10477bc9392472","slug":"TS学习笔记----TS类型","date":"2022-07-07T03:55:03.000Z","updated":"2022-08-02T03:29:29.485Z","comments":true,"path":"api/articles/TS学习笔记----TS类型.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg0.pconline.com.cn%2Fpconline%2F1903%2F25%2F12427877_23c3f5e4bafd423_thumb.jpg&refer=http%3A%2F%2Fimg0.pconline.com.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1659758380&t=24a8635852ef7168aaa57095bf0f2d7f","content":"<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">为什么要学TS？</p>\n<p><ul>\n<li>ts是js的超集，存在类型的脚本语言</li>\n<li>继承了js的所有编程类型，学过es6可以无缝衔接ts</li>\n<li>为构建大型应用而生，但小程序同样适用</li>\n<li>强大的类型系统，拥有静态类型检查能力</li>\n<li>新增类型注解和类型推断</li>\n<li>拥有丰富的class扩展功能</li>\n<li>添加了系统级设计能力，设计模式由顶层由下进行设计</li>\n</ul>\n</p>\n</div>\n<ul>\n<li><p>类型</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"left\">含义</th>\n<th>写法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">number</td>\n<td align=\"left\">数字</td>\n<td>let a: number</td>\n</tr>\n<tr>\n<td align=\"left\">string</td>\n<td align=\"left\">字符串</td>\n<td>let a: string      | let a &#x3D; ‘’</td>\n</tr>\n<tr>\n<td align=\"left\">boolean</td>\n<td align=\"left\">布尔值</td>\n<td>let a: boolean | let a &#x3D; true</td>\n</tr>\n<tr>\n<td align=\"left\">any</td>\n<td align=\"left\">所有类型（不建议使用）</td>\n<td>let a: any         | let a</td>\n</tr>\n<tr>\n<td align=\"left\">unknown</td>\n<td align=\"left\">所有类型（建议使用）</td>\n<td>let a: unknown</td>\n</tr>\n<tr>\n<td align=\"left\">void</td>\n<td align=\"left\">无返回值</td>\n<td>function a ()<strong>:</strong> <em>void</em> {}</td>\n</tr>\n<tr>\n<td align=\"left\">never</td>\n<td align=\"left\">永远无返回值</td>\n<td>function a ()<strong>:</strong> <em>never</em> {}</td>\n</tr>\n<tr>\n<td align=\"left\">object</td>\n<td align=\"left\">对象</td>\n<td>let a: object  | let a &#x3D; {}</td>\n</tr>\n<tr>\n<td align=\"left\">Array</td>\n<td align=\"left\">数组</td>\n<td>let a: Array<number>  | let a: number[]</td>\n</tr>\n<tr>\n<td align=\"left\">Tuple</td>\n<td align=\"left\">元组（固定长度数组）</td>\n<td>let a: [string, number]</td>\n</tr>\n<tr>\n<td align=\"left\">enum</td>\n<td align=\"left\">枚举</td>\n<td>enum gender { male, female }</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h2 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h2><ul>\n<li><h3 id=\"数字-Number\"><a href=\"#数字-Number\" class=\"headerlink\" title=\"数字(Number)\"></a>数字(Number)</h3><p>ts中数字支持二进制、八进制、十进制、十六进制字面量</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> num1<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0b1010</span>\t\t<span class=\"token comment\">// 二进制</span>\n<span class=\"token keyword\">let</span> num2<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0o12</span>  \t\t<span class=\"token comment\">// 八进制</span>\n<span class=\"token keyword\">let</span> num3<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>   \t\t<span class=\"token comment\">// 十进制</span>\n<span class=\"token keyword\">let</span> num4<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xa</span>   \t\t<span class=\"token comment\">// 十六进制</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"字符串-String\"><a href=\"#字符串-String\" class=\"headerlink\" title=\"字符串(String)\"></a>字符串(String)</h3><p>可以使用双引号（<code>&quot;</code>）或单引号（<code>&#39;</code>）表示字符串。</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span>\nname <span class=\"token operator\">=</span> <span class=\"token string\">'李四'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"布尔值-Boolean\"><a href=\"#布尔值-Boolean\" class=\"headerlink\" title=\"布尔值(Boolean)\"></a>布尔值(Boolean)</h3><p>最基本的数据类型，只有 <strong><code>true</code></strong> &#x2F;  <strong><code>false</code></strong> 两个值</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> isNum<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\nisNum <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"any-AND-unknown\"><a href=\"#any-AND-unknown\" class=\"headerlink\" title=\"any AND unknown\"></a>any AND unknown</h3><p>有时候我们并不清楚一个变量的类型，它的类型可能是一个动态的内容。我们希望不对它进行类型检查直接通过编译时可以采用 <code>any</code> 类型</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\na <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span>\na <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>unknown</code>的用法和any一致，不同的是  <code>unknown</code> 可以保证类型安全，而 <code>any</code> 放弃了类型检查 ，<code>unkonwn</code> 则必须要在判断完它是什么类型后才能继续使用，我们可以通过  <strong><code>类型断言</code></strong> 的方式指定变量的类型</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span> <span class=\"token operator\">=</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// error 类型“unknown”上不存在属性“split”</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">a).split('') | (a as string).split('') // ok</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"void-AND-never\"><a href=\"#void-AND-never\" class=\"headerlink\" title=\"void AND never\"></a>void AND never</h3><p><code>void</code> 表示没有任何类型。 通常用在函数上，当一个函数没有返回值时，函数返回值类型是 <code>void</code> </p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>void </code>也可以用在变量上，但通常没什么意义，因为你只能为它赋予 <code>undefined</code> 和 <code>null</code></p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>    <span class=\"token comment\">// error 不能将类型“number”分配给类型“void”</span>\n<span class=\"token keyword\">let</span> a<span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// ok</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>never</code> 表示永远不会有返回值。与<code>void</code> 不同的是， <code>void</code> 可以赋予  <code>undefined</code> 和 <code>null</code> ，函数的默认返回值是 <code>undefined</code> ，而 <code>never</code> 并不能返回任何的值，它可以用作异常抛出</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">never</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//error 返回“从不”的函数不能具有可访问的终结点。</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">never</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// 可以用作异常抛出</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"对象-Object\"><a href=\"#对象-Object\" class=\"headerlink\" title=\"对象(Object)\"></a>对象(Object)</h3><p>除 <code>number</code>，<code>string</code>，<code>boolean</code>之外的类型，与js对象没有差别</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> obj<span class=\"token operator\">:</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><h3 id=\"数组-Array\"><a href=\"#数组-Array\" class=\"headerlink\" title=\"数组(Array)\"></a>数组(Array)</h3><p>声明数组也需要定义数组类型，定义后数组中只能存储类型约束的值</p>\n<p>ts中存在两种定义数组的方式：</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 方法一</span>\n<span class=\"token keyword\">let</span> list1<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>   <span class=\"token comment\">// 该数组中只能存储数字</span>\n<span class=\"token keyword\">let</span> list1<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// error</span>\n\n<span class=\"token comment\">// 方法二：泛型</span>\n<span class=\"token keyword\">let</span> list2<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"元组-Tuple\"><a href=\"#元组-Tuple\" class=\"headerlink\" title=\"元组(Tuple)\"></a>元组(Tuple)</h3><p>元组同数组一样，元组可以存储的数据是 <code>固定</code> 的，数据类型可以不一致</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> t1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>\n\nt1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\">// ok</span>\nt1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>     <span class=\"token comment\">// error</span>\nt1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// error</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"枚举-enum\"><a href=\"#枚举-enum\" class=\"headerlink\" title=\"枚举(enum)\"></a>枚举(enum)</h3><p>枚举数值默认从0开始依次递增</p>\n<p>根据特定的名称得到对应的枚举数值</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> gender <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 声明一个枚举  </span>\n  male<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 0</span>\n  female <span class=\"token comment\">// 1</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gender<span class=\"token punctuation\">.</span>male<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gender<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// male</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我们可以手动为枚举赋值索引</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">enum</span> gender <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 声明一个枚举  </span>\n  male <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 10</span>\n  female      <span class=\"token comment\">// 11</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gender<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// female</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>或是手动为所有索引赋值</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">enum</span> gender <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 声明一个枚举  </span>\n  male <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">// 10</span>\n  female <span class=\"token operator\">=</span> <span class=\"token number\">20</span>     <span class=\"token comment\">// 20</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gender<span class=\"token punctuation\">.</span>male<span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 10</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gender<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   \t<span class=\"token comment\">// female</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"联合类型\"><a href=\"#联合类型\" class=\"headerlink\" title=\"联合类型\"></a>联合类型</h3><p>使用 <code>｜</code> 分割多种类型</p>\n<p>取值可以为多种类型中的一种</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \t<span class=\"token comment\">// ok</span>\na <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span> <span class=\"token comment\">// ok</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><h3 id=\"类型推断\"><a href=\"#类型推断\" class=\"headerlink\" title=\"类型推断\"></a>类型推断</h3><p>TS会在没有明确的指定类型的时候推测出一个类型<br>有2种情况: 1. 定义变量时赋值了, 推断为对应的类型. 2. 定义变量时没有赋值, 推断为any类型</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 赋值情况</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123</span>   <span class=\"token comment\">// number</span>\na <span class=\"token operator\">=</span> <span class=\"token string\">'123'</span>     <span class=\"token comment\">// error</span>\n\n<span class=\"token comment\">// 未赋值情况</span>\n<span class=\"token keyword\">let</span> a         <span class=\"token comment\">// any</span>\na <span class=\"token operator\">=</span> <span class=\"token string\">'123'</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n","text":" 为什么要学TS？ ts是js的超集，存在类型的脚本语言 继承了js的所有编程类型，学过es6可以无缝衔接ts 为构建大型应用而生，但小程序同样适用 强大的类型系统，拥有静态类型检查能力 新增类型注解和类型推断 拥有丰富的class扩展功能 添加了系统级设计能力，设计模式由顶层由...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"web前端","slug":"web前端","count":2,"path":"api/categories/web前端.json"},{"name":"TS学习笔记","slug":"web前端/TS学习笔记","count":1,"path":"api/categories/web前端/TS学习笔记.json"}],"tags":[{"name":"web前端","slug":"web前端","count":2,"path":"api/tags/web前端.json"},{"name":"TS学习笔记","slug":"TS学习笔记","count":1,"path":"api/tags/TS学习笔记.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">基本类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97-Number\"><span class=\"toc-text\">数字(Number)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2-String\"><span class=\"toc-text\">字符串(String)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%83%E5%B0%94%E5%80%BC-Boolean\"><span class=\"toc-text\">布尔值(Boolean)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#any-AND-unknown\"><span class=\"toc-text\">any AND unknown</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#void-AND-never\"><span class=\"toc-text\">void AND never</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1-Object\"><span class=\"toc-text\">对象(Object)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84-Array\"><span class=\"toc-text\">数组(Array)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%83%E7%BB%84-Tuple\"><span class=\"toc-text\">元组(Tuple)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9E%9A%E4%B8%BE-enum\"><span class=\"toc-text\">枚举(enum)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">联合类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD\"><span class=\"toc-text\">类型推断</span></a></li></ol></li></ol>","author":{"name":"Kcxuao","slug":"blog-author","avatar":"https://img.gejiba.com/images/d12fcf0171d543a357ba257c1187033f.webp","link":"/","description":"路漫漫其修远兮，吾将上下而求索","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"qq":{"icon":"/img/qq.png","link":"http://wpa.qq.com/msgrd?v=3&uin=3187294487&site=qq&menu=yes"},"github":{"icon":"/img/github.png","link":"https://github.com/Kcxuao"},"email":{"icon":"/img/email.png","link":"mailto:kcxuao@gmail.com"}}}},"mapped":true,"prev_post":{"title":"Typora破解流程","uid":"f6aa9055047ecd5961d22737b80b722d","slug":"Typora破解流程","date":"2022-07-08T03:42:53.000Z","updated":"2022-07-08T04:20:03.717Z","comments":true,"path":"api/articles/Typora破解流程.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg-blog.csdnimg.cn%2Fimg_convert%2F4b6e01e8772b1f9db60ef79fc95f83e0.png&refer=http%3A%2F%2Fimg-blog.csdnimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1659845419&t=53e16c86722424c78dd0e9b3f1eb0a7d","text":"前言 Typora 是一款支持实时预览的 Markdown 文本编辑器。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是 完全免费的。Typora 是一个 Markdown 文本编辑器，它支持且仅支持 Markdown 语法的文本编辑。 11月2...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"网络安全","slug":"网络安全","count":7,"path":"api/categories/网络安全.json"},{"name":"软件分享","slug":"网络安全/软件分享","count":2,"path":"api/categories/网络安全/软件分享.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":7,"path":"api/tags/网络安全.json"},{"name":"软件分享","slug":"软件分享","count":2,"path":"api/tags/软件分享.json"}],"author":{"name":"Kcxuao","slug":"blog-author","avatar":"https://img.gejiba.com/images/d12fcf0171d543a357ba257c1187033f.webp","link":"/","description":"路漫漫其修远兮，吾将上下而求索","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"qq":{"icon":"/img/qq.png","link":"http://wpa.qq.com/msgrd?v=3&uin=3187294487&site=qq&menu=yes"},"github":{"icon":"/img/github.png","link":"https://github.com/Kcxuao"},"email":{"icon":"/img/email.png","link":"mailto:kcxuao@gmail.com"}}}}},"next_post":{"title":"MAC安装BurpSuit Pro","uid":"2224ddd5978c9eca615a41bf4b8f087c","slug":"MAC安装BurpSuit Pro","date":"2022-07-04T05:12:54.000Z","updated":"2022-07-08T04:09:23.627Z","comments":true,"path":"api/articles/MAC安装BurpSuit Pro.json","keywords":null,"cover":"https://img.gejiba.com/images/6a8eb6e7c68f78ca70921d9fff6600da.md.png","text":"前言今天重装了一下系统，导入快照的时候发现缺少了Burp，无奈只能重新下载安装。 安装JavaBurp是基于Java环境的，首先我们需要安装java环境打开java官网 我的电脑上已经存在java环境了，这里就不再赘述，需要的可以自行百度安装方法 安装Burpsuit Pro1....","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"网络安全","slug":"网络安全","count":7,"path":"api/categories/网络安全.json"},{"name":"软件分享","slug":"网络安全/软件分享","count":2,"path":"api/categories/网络安全/软件分享.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":7,"path":"api/tags/网络安全.json"},{"name":"软件分享","slug":"软件分享","count":2,"path":"api/tags/软件分享.json"}],"author":{"name":"Kcxuao","slug":"blog-author","avatar":"https://img.gejiba.com/images/d12fcf0171d543a357ba257c1187033f.webp","link":"/","description":"路漫漫其修远兮，吾将上下而求索","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"qq":{"icon":"/img/qq.png","link":"http://wpa.qq.com/msgrd?v=3&uin=3187294487&site=qq&menu=yes"},"github":{"icon":"/img/github.png","link":"https://github.com/Kcxuao"},"email":{"icon":"/img/email.png","link":"mailto:kcxuao@gmail.com"}}}}}}